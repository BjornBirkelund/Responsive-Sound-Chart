{"ast":null,"code":"import _objectSpread from \"/Users/bjornbirkelund/Documents/GitHub/soundgraph/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/bjornbirkelund/Documents/GitHub/soundgraph/src/App.js\";\nimport Chart from \"./components/Chart\";\nimport Selector from \"./components/Selector\";\nimport VolumeSlider from \"./components/Slider\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedChart: \"DayChart\",\n      soundlevels: {\n        DayChart: [{\n          name: \"Page A\",\n          \"Decibel Level\": 2400\n        }, {\n          name: \"Page B\",\n          \"Decibel Level\": 2100\n        }, {\n          name: \"Page C\",\n          \"Decibel Level\": 2600\n        }, {\n          name: \"Page D\",\n          \"Decibel Level\": 4000\n        }],\n        WeekChart: [{\n          name: \"Page A\",\n          \"Decibel Level\": 2400\n        }, {\n          name: \"Page B\",\n          \"Decibel Level\": 2100\n        }, {\n          name: \"Page C\",\n          \"Decibel Level\": 2600\n        }, {\n          name: \"Page D\",\n          \"Decibel Level\": 2700\n        }],\n        MonthChart: [{\n          name: \"Page A\",\n          \"Decibel Level\": 2400\n        }, {\n          name: \"Page B\",\n          \"Decibel Level\": 2100\n        }, {\n          name: \"Page C\",\n          \"Decibel Level\": 3000\n        }, {\n          name: \"Page D\",\n          \"Decibel Level\": 2700\n        }],\n        YearChart: [{\n          name: \"Page B\",\n          \"Decibel Level\": 2100\n        }, {\n          name: \"Page C\",\n          \"Decibel Level\": 2600\n        }, {\n          name: \"Page D\",\n          \"Decibel Level\": 2700\n        }]\n      }\n    };\n\n    this.handleButtonClick = myChart => {\n      this.setState({\n        selectedChart: myChart\n      });\n      return React.createElement(Chart, {\n        data: this.state.soundlevels[this.state.selectedChart],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    };\n\n    this.updateSoundLevels = () => {\n      console.log(\"update\");\n      let newDayLevel = [{\n        name: \"Page A\",\n        \"Decibel Level\": 2400\n      }, {\n        name: \"Page B\",\n        \"Decibel Level\": 10\n      }, {\n        name: \"Page C\",\n        \"Decibel Level\": 2600\n      }, {\n        name: \"Page D\",\n        \"Decibel Level\": 2700\n      }];\n      let newWeekLevel = [{\n        name: \"Page A\",\n        \"Decibel Level\": 2400\n      }, {\n        name: \"Page B\",\n        \"Decibel Level\": 10\n      }, {\n        name: \"Page C\",\n        \"Decibel Level\": 20\n      }, {\n        name: \"Page D\",\n        \"Decibel Level\": 2700\n      }];\n      let newMonthLevel = [{\n        name: \"Page A\",\n        \"Decibel Level\": 2000\n      }, {\n        name: \"Page B\",\n        \"Decibel Level\": 100\n      }, {\n        name: \"Page C\",\n        \"Decibel Level\": 1000\n      }, {\n        name: \"Page D\",\n        \"Decibel Level\": 2700\n      }];\n      let newYearLevel = [{\n        name: \"Page A\",\n        \"Decibel Level\": 2400\n      }, {\n        name: \"Page B\",\n        \"Decibel Level\": 10\n      }, {\n        name: \"Page C\",\n        \"Decibel Level\": 2600\n      }, {\n        name: \"Page D\",\n        \"Decibel Level\": 500\n      }];\n      this.setState(prevState => ({\n        soundlevels: _objectSpread({}, prevState.soundlevels, {\n          DayChart: newDayLevel,\n          WeekChart: newWeekLevel,\n          MonthChart: newMonthLevel,\n          YearChart: newYearLevel\n        })\n      }));\n      console.log(\"DayChart:\", this.state.soundlevels.DayChart);\n    };\n  }\n\n  render() {\n    return React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(VolumeSlider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Selector, {\n      onButtonClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      data: this.state.soundlevels[this.state.selectedChart],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n  componentDidMount() {\n    setInterval(this.updateSoundLevels, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bjornbirkelund/Documents/GitHub/soundgraph/src/App.js"],"names":["Chart","Selector","VolumeSlider","React","Component","App","state","selectedChart","soundlevels","DayChart","name","WeekChart","MonthChart","YearChart","handleButtonClick","myChart","setState","updateSoundLevels","console","log","newDayLevel","newWeekLevel","newMonthLevel","newYearLevel","prevState","render","componentDidMount","setInterval","componentWillUnmount","clearInterval","interval"],"mappings":"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","sourcesContent":["import Chart from \"./components/Chart\";\nimport Selector from \"./components/Selector\";\nimport VolumeSlider from \"./components/Slider\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    selectedChart: \"DayChart\",\n    soundlevels: {\n      DayChart: [\n        { name: \"Page A\", \"Decibel Level\": 2400 },\n        { name: \"Page B\", \"Decibel Level\": 2100 },\n        { name: \"Page C\", \"Decibel Level\": 2600 },\n        { name: \"Page D\", \"Decibel Level\": 4000 }\n      ],\n      WeekChart: [\n        { name: \"Page A\", \"Decibel Level\": 2400 },\n        { name: \"Page B\", \"Decibel Level\": 2100 },\n        { name: \"Page C\", \"Decibel Level\": 2600 },\n        { name: \"Page D\", \"Decibel Level\": 2700 }\n      ],\n      MonthChart: [\n        { name: \"Page A\", \"Decibel Level\": 2400 },\n        { name: \"Page B\", \"Decibel Level\": 2100 },\n        { name: \"Page C\", \"Decibel Level\": 3000 },\n        { name: \"Page D\", \"Decibel Level\": 2700 }\n      ],\n      YearChart: [\n        { name: \"Page B\", \"Decibel Level\": 2100 },\n        { name: \"Page C\", \"Decibel Level\": 2600 },\n        { name: \"Page D\", \"Decibel Level\": 2700 }\n      ]\n    }\n  };\n  handleButtonClick = myChart => {\n    this.setState({ selectedChart: myChart });\n    return <Chart data={this.state.soundlevels[this.state.selectedChart]} />;\n  };\n  render() {\n    return (\n      <header className=\"App-header\">\n        <VolumeSlider />\n        <Selector onButtonClick={this.handleButtonClick} />\n        <Chart data={this.state.soundlevels[this.state.selectedChart]} />\n      </header>\n    );\n  }\n\n  updateSoundLevels = () => {\n    console.log(\"update\");\n    let newDayLevel = [\n      { name: \"Page A\", \"Decibel Level\": 2400 },\n      { name: \"Page B\", \"Decibel Level\": 10 },\n      { name: \"Page C\", \"Decibel Level\": 2600 },\n      { name: \"Page D\", \"Decibel Level\": 2700 }\n    ];\n    let newWeekLevel = [\n      { name: \"Page A\", \"Decibel Level\": 2400 },\n      { name: \"Page B\", \"Decibel Level\": 10 },\n      { name: \"Page C\", \"Decibel Level\": 20 },\n      { name: \"Page D\", \"Decibel Level\": 2700 }\n    ];\n    let newMonthLevel = [\n      { name: \"Page A\", \"Decibel Level\": 2000 },\n      { name: \"Page B\", \"Decibel Level\": 100 },\n      { name: \"Page C\", \"Decibel Level\": 1000 },\n      { name: \"Page D\", \"Decibel Level\": 2700 }\n    ];\n    let newYearLevel = [\n      { name: \"Page A\", \"Decibel Level\": 2400 },\n      { name: \"Page B\", \"Decibel Level\": 10 },\n      { name: \"Page C\", \"Decibel Level\": 2600 },\n      { name: \"Page D\", \"Decibel Level\": 500 }\n    ];\n\n    this.setState(prevState => ({\n      soundlevels: {\n        ...prevState.soundlevels,\n        DayChart: newDayLevel,\n        WeekChart: newWeekLevel,\n        MonthChart: newMonthLevel,\n        YearChart: newYearLevel\n      }\n    }));\n    console.log(\"DayChart:\", this.state.soundlevels.DayChart);\n  };\n\n  componentDidMount() {\n    setInterval(this.updateSoundLevels, 5000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}